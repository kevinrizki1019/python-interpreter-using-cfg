ALGORITHM -> ALGORITHM ALGORITHM | ASSIGNMENT | EXPRESSION | IMPORT_ALGORITHM | IF_ALGORITHM | IF_ALGORITHM ELSE_STATEMENT | IF_ALGORITHM ELIF_STATEMENT | WHILE_ALGORITHM COLON | FOR_ALGORITHM COLON | OPERATOR COLON | DEF_STATEMENT | WITH_STATEMENT | WRITE_ALGORITHM
IMPORT_ALGORITHM -> FROM WORD IMPORT WORD AS WORD | IMPORT WORD AS WORD | FROM WORD IMPORT WORD
IF_STATEMENT -> IF_ALGORITHM | IF_ALGORITHM ELSE_STATEMENT | IF_ALGORITHM ELIF_STATEMENT
IF_ALGORITHM -> IF CONDITION COLON ALGORITHM
ELIF_STATEMENT -> ELIF_ALGORITHM COLON | ELIF_ALGORITHM ELSE_STATEMENT | ELIF_ALGORITHM ELIF_STATEMENT
ELIF_ALGORITHM -> ELIF CONDITION COLON ALGORITHM
ELSE_STATEMENT -> ELSE COLON ALGORITHM | ELSE IF_STATEMENT
IF_CONDITION -> IF CONDITION
WHILE_CONTENT -> WHILE CONDITION DO ALGORITHM
FOR_ALGORITHM -> FOR TYPE_FOR ALGORITHM
TYPE_FOR -> FOR TYPE_FOR | FOR_1 COLON | FOR_2 COLON
FOR_1 -> WORD IN RANGE OBRACKET EXPRESSION CBRACKET
FOR_2 -> WORD IN RANGE OBRACKET EXPRESSION COMMA EXPRESSION CBRACKET
FOR_3 -> WORD IN RANGE OBRACKET EXPRESSION COMMA EXPRESSION COMMA EXPRESSION CBRACKET
FOR_4 -> WORD IN WORD
DEF_STATEMENT -> DEF WORD PARAMETER_STATEMENT COLON ALGORITHM | DEF WORD PARAMETER_STATEMENT COLON DEF_RETURN
DEF_RETURN -> ALGORITHM RETURN_STATEMENT
PARAMETER_STATEMENT -> OBRACKET PARAMETER CBRACKET | OBRACKET CBRACKET
PARAMETER -> WORD | WORD COMMA PARAMETER | WORD EQUAL STRING COMMA PARAMETER | WORD EQUAL STRING | WORD EQUAL WORD COMMA PARAMETER | WORD EQUAL WORD 
OPERATOR -> INPUT OBRACKET WORD CBRACKET | OUTPUT OBRACKET WORD CBRACKET | WORD EQUAL EXPRESSION
CONDITION -> OBRACKET CONDITION CBRACKET | CONDITION LOGICAL_OP CONDITION | EXPRESSION RELATIONAL_OP EXPRESSION | NOT CONDITION
EXPRESSION -> WORD | NUM | OBRACKET EXPRESSION CBRACKET | EXPRESSION ARITHMATIC_OP EXPRESSION
RETURN_STATEMENT -> RETURN RETURN_PARAMETER
RETURN_PARAMETER -> WORD | WORD COMMA RETURN_PARAMETER
LIST_DECLARATION -> SQUARE_OBRACKET LIST_ELEMENTS SQUARE_CBRACKET | SQUARE_OBRACKET SQUARE_CBRACKET | SQUARE_OBRACKET WORD FOR_1 SQUARE_CBRACKET | SQUARE_OBRACKET WORD FOR_2 SQUARE_CBRACKET | SQUARE_OBRACKET WORD FOR_3 SQUARE_CBRACKET | SQUARE_OBRACKET WORD FOR_4 SQUARE_CBRACKET
LIST_ELEMENTS -> LIST_DECLARATION | WORD | WORD COMMA LIST_ELEMENTS | NUM | NUM COMMA LIST_ELEMENTS
STRING -> QUOTE_MARK WORD_STRING QUOTE_MARK | DOUBLE_QUOTE_MARK WORD_STRING DOUBLE_QUOTE_MARK
WORD_ STRING -> WORD | WORD WORD_STRING
ASSIGNMENT -> WORD EQUAL WORD | WORD EQUAL STRING | WORD EQUAL LIST_DECLARATION
ASSIGNMENT_INT -> WORD ASSIGNMENT_OP NUM
SENTENCE -> WORD | WORD SENTENCE
WITH_STATEMENT -> WITH OPEN OBRACKET STRING COMMA STRING CBRACKET AS WORD COLON ALGORITHM
WRITE_ALGORITHM -> WORD PERIOD WRITE OBRACKET STRING CBRACKET | WORD PERIOD WRITE OBRACKET EXPRESSION CBRACKET | WORD PERIOD WRITE OBRACKET WORD CBRACKET
IMPORT -> import
FROM -> from
AS -> as
BOOLEAN -> True | False
DEF -> def
GLOBAL -> global
NONE -> None
WITH -> with
OPEN -> open
WRITE -> write
READ -> read
READLINES -> readlines
CASE -> case
RETURN -> return
CONTINUE -> continue
BREAK -> break
PASS -> pass
RAISE -> raise
IN -> in
CLASS -> class
IS -> is
ARITHMATIC_OP -> - | + | * | / | % | **
LOGICAL_OP -> and | or
RELATIONAL_OP -> GREATER | LESS | GREATER_EQUAL | LESS_EQUAL | EQUAL EQUAL | TANDA_SERU EQUAL
ASSIGNMENT_OP > PLUS EQUAL | MINUS EQUAL | MULTIPLY EQUAL | DIVIDE EQUAL |  += | -= | *= | /= | %= | //= | **=
COMMENT -> COMMENT_HASHTAG SENTENCE ENDLINE | COMMENT_QUOTATION QUOTATION_COMMENT_SENTENCE COMMENT_QUOTATION
QUOTATION_COMMENT_SENTENCE -> SENTENCE | SENTENCE ENDLINE QUOTATION_COMMENT_SENTENCE
PLUS -> +
MINUS -> -
MULTIPLY -> *
DIVIDE -> /
MODULO -> %
POWER -> MULTIPLY MULTIPLY
IF -> if
ELSE -> else
ELIF -> elif
WHILE -> while
FOR -> for
WORD -> word
NUM -> num
INPUT -> input
COLON -> :
COMMA -> ,
PERIOD -> .
SQUARE_OBRACKET -> [
SQUARE_CBRACKET -> ]
OBRACKET -> (
CBRACKET -> )
EQUAL -> =
GREATER -> >
LESS -> <
QUOTE_MARK -> '
DOUBLE_QUOTE_MARK -> "
COMMENT_QUOTATION -> QUOTE_MARK QUOTE_MARK QUOTE_MARK
COMMENT_HASHTAG -> #
ENDLINE -> endline
TANDA_SERU -> !
PRINT -> print