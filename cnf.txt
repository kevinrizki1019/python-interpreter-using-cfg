EQUAL_deriv -> EQUAL LIST_DECLARATION
EQUAL_deriv1 -> EQUAL STRING
EQUAL_deriv2 -> EQUAL WORD
ARITHMATIC_OP_deriv -> ARITHMATIC_OP EXPRESSION
EXPRESSION_deriv -> EXPRESSION CBRACKET
WORD_deriv -> WORD IMPORT_deriv
IMPORT_deriv -> IMPORT WORD
WORD_deriv3 -> WORD AS_deriv
AS_deriv -> AS WORD
WORD_deriv4 -> WORD IMPORT_deriv5
IMPORT_deriv5 -> IMPORT WORD_deriv6
WORD_deriv6 -> WORD AS_deriv7
AS_deriv7 -> AS WORD
CONDITION_deriv -> CONDITION COLON_deriv
COLON_deriv -> COLON ALGORITHM
ALGORITHM -> FOR_ALGORITHM COLON | word | ALGORITHM ALGORITHM | WORD EQUAL_deriv | WORD EQUAL_deriv1 | WORD EQUAL_deriv2 | EXPRESSION ARITHMATIC_OP_deriv | OBRACKET EXPRESSION_deriv | num | FROM WORD_deriv | IMPORT WORD_deriv3 | FROM WORD_deriv4 | IF CONDITION_deriv | IF_ALGORITHM ELSE_STATEMENT | WHILE_ALGORITHM COLON | OPERATOR COLON | DEF WORD_deriv10 | IF_ALGORITHM ELIF_STATEMENT | DEF WORD_deriv8
WORD_deriv8 -> WORD PARAMETER_STATEMENT_deriv
PARAMETER_STATEMENT_deriv -> PARAMETER_STATEMENT COLON_deriv9
COLON_deriv9 -> COLON DEF_RETURN
WORD_deriv10 -> WORD PARAMETER_STATEMENT_deriv11
PARAMETER_STATEMENT_deriv11 -> PARAMETER_STATEMENT COLON_deriv12
COLON_deriv12 -> COLON ALGORITHM
IMPORT_ALGORITHM -> FROM WORD_deriv13 | IMPORT WORD_deriv17 | FROM WORD_deriv19
WORD_deriv13 -> WORD IMPORT_deriv14
IMPORT_deriv14 -> IMPORT WORD_deriv15
WORD_deriv15 -> WORD AS_deriv16
AS_deriv16 -> AS WORD
WORD_deriv17 -> WORD AS_deriv18
AS_deriv18 -> AS WORD
WORD_deriv19 -> WORD IMPORT_deriv20
IMPORT_deriv20 -> IMPORT WORD
CONDITION_deriv21 -> CONDITION COLON_deriv22
COLON_deriv22 -> COLON ALGORITHM
IF_STATEMENT -> IF_ALGORITHM ELIF_STATEMENT | IF CONDITION_deriv21 | IF_ALGORITHM ELSE_STATEMENT
IF_ALGORITHM -> IF CONDITION_deriv23
CONDITION_deriv23 -> CONDITION COLON_deriv24
COLON_deriv24 -> COLON ALGORITHM
ELIF_STATEMENT -> ELIF_ALGORITHM ELIF_STATEMENT | ELIF_ALGORITHM COLON | ELIF_ALGORITHM ELSE_STATEMENT
ELIF_ALGORITHM -> ELIF CONDITION_deriv25
CONDITION_deriv25 -> CONDITION COLON_deriv26
COLON_deriv26 -> COLON ALGORITHM
ELSE_STATEMENT -> ELSE COLON_deriv27 | ELSE IF_STATEMENT
COLON_deriv27 -> COLON ALGORITHM
IF_CONDITION -> IF CONDITION
WHILE_CONTENT -> WHILE CONDITION_deriv28
CONDITION_deriv28 -> CONDITION DO_deriv
DO_deriv -> DO ALGORITHM
FOR_ALGORITHM -> FOR TYPE_FOR_deriv
TYPE_FOR_deriv -> TYPE_FOR ALGORITHM
TYPE_FOR -> FOR_2 COLON | FOR TYPE_FOR | FOR_1 COLON
FOR_1 -> WORD IN_deriv
IN_deriv -> IN RANGE_deriv
RANGE_deriv -> RANGE OBRACKET_deriv
OBRACKET_deriv -> OBRACKET NUM_deriv
NUM_deriv -> NUM CBRACKET
FOR_2 -> WORD IN_deriv29
IN_deriv29 -> IN RANGE_deriv30
RANGE_deriv30 -> RANGE OBRACKET_deriv31
OBRACKET_deriv31 -> OBRACKET NUM_deriv32
NUM_deriv32 -> NUM COMMA_deriv
COMMA_deriv -> COMMA NUM_deriv33
NUM_deriv33 -> NUM CBRACKET
FOR_3 -> WORD IN_deriv34
IN_deriv34 -> IN RANGE_deriv35
RANGE_deriv35 -> RANGE OBRACKET_deriv36
OBRACKET_deriv36 -> OBRACKET NUM_deriv37
NUM_deriv37 -> NUM COMMA_deriv38
COMMA_deriv38 -> COMMA NUM_deriv39
NUM_deriv39 -> NUM COMMA_deriv40
COMMA_deriv40 -> COMMA NUM_deriv41
NUM_deriv41 -> NUM CBRACKET
FOR_4 -> WORD IN_deriv42
IN_deriv42 -> IN WORD
DEF_STATEMENT -> DEF WORD_deriv43 | DEF WORD_deriv46
WORD_deriv43 -> WORD PARAMETER_STATEMENT_deriv44
PARAMETER_STATEMENT_deriv44 -> PARAMETER_STATEMENT COLON_deriv45
COLON_deriv45 -> COLON ALGORITHM
WORD_deriv46 -> WORD PARAMETER_STATEMENT_deriv47
PARAMETER_STATEMENT_deriv47 -> PARAMETER_STATEMENT COLON_deriv48
COLON_deriv48 -> COLON DEF_RETURN
DEF_RETURN -> ALGORITHM RETURN_STATEMENT
PARAMETER_STATEMENT -> OBRACKET PARAMETER_deriv | OBRACKET CBRACKET
PARAMETER_deriv -> PARAMETER CBRACKET
PARAMETER -> word | WORD COMMA_deriv49 | WORD EQUAL_deriv50 | WORD EQUAL_deriv52 | WORD EQUAL_deriv53 | WORD EQUAL_deriv56
COMMA_deriv49 -> COMMA PARAMETER
EQUAL_deriv50 -> EQUAL STRING_deriv
STRING_deriv -> STRING COMMA_deriv51
COMMA_deriv51 -> COMMA PARAMETER
EQUAL_deriv52 -> EQUAL STRING
EQUAL_deriv53 -> EQUAL WORD_deriv54
WORD_deriv54 -> WORD COMMA_deriv55
COMMA_deriv55 -> COMMA PARAMETER
EQUAL_deriv56 -> EQUAL WORD
OPERATOR -> INPUT OBRACKET_deriv57 | OUTPUT OBRACKET_deriv59 | WORD EQUAL_deriv61
OBRACKET_deriv57 -> OBRACKET WORD_deriv58
WORD_deriv58 -> WORD CBRACKET
OBRACKET_deriv59 -> OBRACKET WORD_deriv60
WORD_deriv60 -> WORD CBRACKET
EQUAL_deriv61 -> EQUAL EXPRESSION
CONDITION -> OBRACKET CONDITION_deriv62 | CONDITION LOGICAL_OP_deriv | EXPRESSION RELATIONAL_OP_deriv | NOT CONDITION
CONDITION_deriv62 -> CONDITION CBRACKET
LOGICAL_OP_deriv -> LOGICAL_OP CONDITION
RELATIONAL_OP_deriv -> RELATIONAL_OP EXPRESSION
EXPRESSION -> OBRACKET EXPRESSION_deriv63 | word | num | EXPRESSION ARITHMATIC_OP_deriv64
EXPRESSION_deriv63 -> EXPRESSION CBRACKET
ARITHMATIC_OP_deriv64 -> ARITHMATIC_OP EXPRESSION
RETURN_STATEMENT -> RETURN RETURN_PARAMETER
RETURN_PARAMETER -> word | WORD COMMA_deriv65
COMMA_deriv65 -> COMMA RETURN_PARAMETER
LIST_DECLARATION -> SQUARE_OBRACKET LIST_ELEMENTS_deriv | SQUARE_OBRACKET SQUARE_CBRACKET
LIST_ELEMENTS_deriv -> LIST_ELEMENTS SQUARE_CBRACKET
LIST_ELEMENTS_deriv66 -> LIST_ELEMENTS SQUARE_CBRACKET
LIST_ELEMENTS -> WORD COMMA_deriv67 | LIST_DECLARATION | SQUARE_OBRACKET LIST_ELEMENTS_deriv66 | word | num | NUM COMMA_deriv68
COMMA_deriv67 -> COMMA LIST_ELEMENTS
COMMA_deriv68 -> COMMA LIST_ELEMENTS
STRING -> QUOTE_MARK WORD_STRING_deriv | DOUBLE_QUOTE_MARK WORD_STRING_deriv69
WORD_STRING_deriv -> WORD_STRING QUOTE_MARK
WORD_STRING_deriv69 -> WORD_STRING DOUBLE_QUOTE_MARK
WORD_ -> STRING WORD | WORD WORD_STRING
ASSIGNMENT -> WORD EQUAL_deriv70 | WORD EQUAL_deriv71 | WORD EQUAL_deriv72
EQUAL_deriv70 -> EQUAL WORD
EQUAL_deriv71 -> EQUAL STRING
EQUAL_deriv72 -> EQUAL LIST_DECLARATION
ASSIGNMENT_INT -> WORD ASSIGNMENT_OP_deriv
ASSIGNMENT_OP_deriv -> ASSIGNMENT_OP NUM
SENTENCE -> word | WORD SENTENCE
IMPORT -> import
FROM -> from
AS -> as
BOOLEAN -> True | False
DEF -> def
GLOBAL -> global
NONE -> None
WITH -> with
CASE -> case
RETURN -> return
CONTINUE -> continue
BREAK -> break
PASS -> pass
RAISE -> raise
IN -> in
CLASS -> class
IS -> is
ARITHMATIC_OP -> * | - | + | / | %
LOGICAL_OP -> or | and
RELATIONAL_OP -> < | > | LESS_EQUAL | TANDA_SERU EQUAL
RELATIONAL_OP -> EQUAL EQUAL
PLUS_deriv -> PLUS EQUAL
ASSIGNMENT_OP -> MULTIPLY EQUAL | > PLUS_deriv | MINUS EQUAL | DIVIDE EQUAL | /= | -=
ASSIGNMENT_OP -> //=
COMMENT -> COMMENT_HASHTAG SENTENCE_deriv | COMMENT_QUOTATION QUOTATION_COMMENT_SENTENCE_deriv
SENTENCE_deriv -> SENTENCE NEWLINE
QUOTATION_COMMENT_SENTENCE_deriv -> QUOTATION_COMMENT_SENTENCE COMMENT_QUOTATION
QUOTATION_COMMENT_SENTENCE -> SENTENCE NEWLINE_deriv | import | word
NEWLINE_deriv -> NEWLINE QUOTATION_COMMENT_SENTENCE
PLUS -> +
MINUS -> -
MULTIPLY -> *
DIVIDE -> /
MODULO -> %
POWER -> MULTIPLY MULTIPLY
IF -> if
ELSE -> else
ELIF -> elif
WHILE -> while
FOR -> for
WORD -> word
INPUT -> input
COLON -> :
COMMA -> ,
PERIOD -> .
SQUARE_OBRACKET -> [
SQUARE_CBRACKET -> ]
OBRACKET -> (
CBRACKET -> )
EQUAL -> =
GREATER -> >
LESS -> <
QUOTE_MARK -> '
DOUBLE_QUOTE_MARK -> "
COMMENT_QUOTATION -> QUOTE_MARK QUOTE_MARK_deriv
QUOTE_MARK_deriv -> QUOTE_MARK QUOTE_MARK
NEWLINE -> \n
