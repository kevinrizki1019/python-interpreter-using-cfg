ALGORITHM -> IF_ALGORITHM ELIF_STATEMENT | ALGORITHM ALGORITHM | IF_ALGORITHM ELSE_STATEMENT | WHILE_ALGORITHM COLON | OPERATOR COLON | FOR_ALGORITHM COLON
IF_STATEMENT -> IF_ALGORITHM ELSE_STATEMENT | IF_ALGORITHM COLON | IF_ALGORITHM ELIF_STATEMENT
IF_ALGORITHM -> IF CONDITION_deriv
COLON_deriv -> COLON ALGORITHM
ELIF_STATEMENT -> ELIF_ALGORITHM ELIF_STATEMENT | ELIF_ALGORITHM COLON | ELIF_ALGORITHM ELSE_STATEMENT
ELIF_ALGORITHM -> ELIF CONDITION_deriv
CONDITION_deriv -> CONDITION COLON_deriv | CONDITION COLON_deriv | CONDITION DO_deriv | CONDITION CBRACKET
ELSE_STATEMENT -> ELSE IF_STATEMENT | ELSE COLON_deriv
IF_CONDITION -> IF CONDITION
WHILE_CONTENT -> WHILE CONDITION_deriv
DO_deriv -> DO ALGORITHM
FOR_ALGORITHM -> FOR TYPE_FOR_deriv
TYPE_FOR_deriv -> TYPE_FOR ALGORITHM
TYPE_FOR -> FOR_2 COLON | FOR TYPE_FOR | FOR_1 COLON
FOR_1 -> WORD IN_deriv
RANGE_deriv -> RANGE OBRACKET_deriv
CONSTANT_deriv -> CONSTANT CBRACKET | CONSTANT COMMA_deriv | CONSTANT COMMA_deriv | CONSTANT COMMA_deriv
FOR_2 -> WORD IN_deriv
IN_deriv -> IN RANGE_deriv | IN RANGE_deriv | IN WORD | IN RANGE_deriv
RANGE_deriv -> RANGE OBRACKET_deriv
OBRACKET_deriv -> OBRACKET CONSTANT_deriv | OBRACKET CONSTANT_deriv | OBRACKET WORD_deriv | OBRACKET WORD_deriv | OBRACKET CONSTANT_deriv
COMMA_deriv -> COMMA CONSTANT_deriv
FOR_3 -> WORD IN_deriv
RANGE_deriv -> RANGE OBRACKET_deriv
COMMA_deriv -> COMMA CONSTANT_deriv
COMMA_deriv -> COMMA CONSTANT_deriv
FOR_4 -> WORD IN_deriv
WORD_deriv -> WORD CBRACKET
OPERATOR -> WORD EQUAL_deriv | INPUT OBRACKET_deriv | OUTPUT OBRACKET_deriv
EQUAL_deriv -> EQUAL EXPRESSION
CONDITION -> OBRACKET CONDITION_deriv | CONDITION LOGICAL_OP_deriv | EXPRESSION RELATIONAL_OP_deriv
LOGICAL_OP_deriv -> LOGICAL_OP CONDITION
RELATIONAL_OP_deriv -> RELATIONAL_OP EXPRESSION
EXPRESSION -> CONSTANT | OBRACKET EXPRESSION_deriv | EXPRESSION ARITHMATIC_OP_deriv
EXPRESSION_deriv -> EXPRESSION CBRACKET
ARITHMATIC_OP_deriv -> ARITHMATIC_OP EXPRESSION
FROM -> from
BOOLEAN -> True
DEF -> def
NONE -> None
CASE -> case
CONTINUE -> continue
PASS -> pass
IN -> in
IS -> is
ARITHMATIC_OP -> + | /
LOGICAL_OP -> and | not
RELATIONAL_OP -> LESS EQUAL | > | GREATER EQUAL | LESS GREATER
ELSE -> else
WHILE -> while
WORD -> word
INPUT -> input
COMMA -> ,
SQUARE_OBRACKET -> [
OBRACKET -> (
EQUAL -> =
LESS -> <
RANGE ->
